<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.code.data.dao.NewsHotInfoMapper">
    <resultMap id="BaseResultMap" type="com.code.data.beans.NewsHotInfo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="modules_type" property="modulesType" jdbcType="TINYINT"/>
        <result column="image" property="image" jdbcType="VARCHAR"/>
        <result column="refer_url" property="referUrl" jdbcType="VARCHAR"/>
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="last_update_date" property="lastUpdateDate" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, title, image, refer_url, modules_type, create_date, last_update_date
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from tb_news_hot_info
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectListBylimit" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_news_hot_info where modules_type = #{modules, jdbcType=TINYINT} order by create_date desc limit 0,
        #{limit}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_news_hot_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.code.data.beans.NewsHotInfo">
    insert into tb_news_hot_info (id, title, image,
      refer_url)
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{image,jdbcType=VARCHAR},
      #{referUrl,jdbcType=VARCHAR}})
  </insert>
    <!-- myself:批量插入 -->
    <insert id="insertList" parameterType="java.util.List">
        insert into tb_news_hot_info (id, title, modules_type, image, refer_url)values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id,jdbcType=BIGINT}, #{item.title,jdbcType=VARCHAR},#{item.modulesType,jdbcType=TINYINT},
            #{item.image,jdbcType=VARCHAR},#{item.referUrl,jdbcType=VARCHAR})
        </foreach>
    </insert>

</mapper>